// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;
using Wendy.Server.Data;

namespace WendyApp.Server.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20220513134947_UpdatedDB")]
    partial class UpdatedDB
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.15")
                .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WendyApp.Shared.Domain.Categoria", b =>
                {
                    b.Property<int>("CategoriaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("CategoriaId");

                    b.ToTable("Categorias");

                    b.HasData(
                        new
                        {
                            CategoriaId = 1,
                            Nombre = "Vegetales"
                        });
                });

            modelBuilder.Entity("WendyApp.Shared.Domain.EstadoPedido", b =>
                {
                    b.Property<int>("EstadoPedidoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Estado")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("EstadoPedidoId");

                    b.ToTable("EstadoPedidos");
                });

            modelBuilder.Entity("WendyApp.Shared.Domain.HistorialPedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int>("EstadoPedidosId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<int>("PedidoId")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("Id");

                    b.HasIndex("EstadoPedidosId");

                    b.HasIndex("PedidoId");

                    b.ToTable("HistorialPedidos");
                });

            modelBuilder.Entity("WendyApp.Shared.Domain.Insumo", b =>
                {
                    b.Property<int>("InsumoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("Nombre")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<decimal>("Precio")
                        .HasColumnType("DECIMAL(18, 2)");

                    b.HasKey("InsumoId");

                    b.ToTable("Insumos");
                });

            modelBuilder.Entity("WendyApp.Shared.Domain.InsumoCategoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoriaId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("InsumoId")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("InsumoId");

                    b.ToTable("InsumosCategorias");
                });

            modelBuilder.Entity("WendyApp.Shared.Domain.Pais", b =>
                {
                    b.Property<int>("PaisId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("PaisId");

                    b.ToTable("Paises");

                    b.HasData(
                        new
                        {
                            PaisId = 1,
                            Nombre = "El Salvador"
                        },
                        new
                        {
                            PaisId = 2,
                            Nombre = "Guatemala"
                        },
                        new
                        {
                            PaisId = 3,
                            Nombre = "Costa Rica"
                        });
                });

            modelBuilder.Entity("WendyApp.Shared.Domain.PaisProveedor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("CostoTransporte")
                        .HasColumnType("DECIMAL(18, 2)");

                    b.Property<int>("PaisId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("ProveedorId")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("Id");

                    b.HasIndex("PaisId");

                    b.HasIndex("ProveedorId");

                    b.ToTable("PaisesProveedores");
                });

            modelBuilder.Entity("WendyApp.Shared.Domain.Pedido", b =>
                {
                    b.Property<int>("PedidoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EstadoPedidosId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<DateTime>("FechaEntrega")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<int>("ProveedorId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("SucursalId")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("PedidoId");

                    b.HasIndex("EstadoPedidosId");

                    b.HasIndex("ProveedorId");

                    b.HasIndex("SucursalId");

                    b.ToTable("Pedidos");
                });

            modelBuilder.Entity("WendyApp.Shared.Domain.PedidoInsumo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Cantidad")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("InsumoId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("PedidoId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<decimal>("Precio")
                        .HasColumnType("DECIMAL(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("InsumoId");

                    b.HasIndex("PedidoId");

                    b.ToTable("PedidosInsumos");
                });

            modelBuilder.Entity("WendyApp.Shared.Domain.Proveedor", b =>
                {
                    b.Property<int>("ProveedorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("Nombre")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("ProveedorId");

                    b.ToTable("Proveedores");
                });

            modelBuilder.Entity("WendyApp.Shared.Domain.ProveedorInsumo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("InsumoId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<decimal>("Precio")
                        .HasColumnType("DECIMAL(18, 2)");

                    b.Property<int>("ProveedorId")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("Id");

                    b.HasIndex("InsumoId");

                    b.HasIndex("ProveedorId");

                    b.ToTable("ProveedoresInsumos");
                });

            modelBuilder.Entity("WendyApp.Shared.Domain.Sucursal", b =>
                {
                    b.Property<int>("SucursalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Direccion")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("Nombre")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int>("PaisId")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("SucursalId");

                    b.HasIndex("PaisId");

                    b.ToTable("Sucursales");

                    b.HasData(
                        new
                        {
                            SucursalId = 1,
                            Direccion = "Metrocentro 8va etapa",
                            FechaCreacion = new DateTime(2022, 5, 13, 7, 49, 47, 234, DateTimeKind.Local).AddTicks(5033),
                            Nombre = "Sucursal Metrocentro",
                            PaisId = 1
                        });
                });

            modelBuilder.Entity("WendyApp.Shared.Domain.Usuario", b =>
                {
                    b.Property<int>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Nickname")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<byte[]>("Password")
                        .HasColumnType("RAW(2000)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("RAW(2000)");

                    b.Property<string>("Rol")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int>("SucursalId")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("UsuarioId");

                    b.HasIndex("SucursalId");

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            UsuarioId = 1,
                            Email = "usuario_admin@wendy.com",
                            Nickname = "admin",
                            Password = new byte[] { 213, 4, 3, 13, 5, 62, 10, 130, 4, 60, 30, 157, 33, 78, 43, 25, 153, 222, 134, 50, 115, 239, 136, 193, 222, 201, 212, 121, 25, 250, 195, 14, 107, 50, 152, 33, 147, 119, 210, 171, 141, 48, 125, 236, 135, 9, 16, 215, 215, 34, 221, 226, 190, 31, 251, 174, 165, 168, 234, 90, 117, 10, 101, 32 },
                            PasswordSalt = new byte[] { 250, 10, 48, 46, 124, 120, 139, 58, 9, 103, 200, 233, 227, 230, 172, 35, 90, 91, 78, 100, 88, 167, 82, 235, 142, 40, 62, 194, 204, 9, 236, 223, 43, 82, 76, 173, 176, 157, 47, 168, 224, 50, 34, 141, 18, 149, 202, 61, 113, 0, 107, 144, 215, 98, 234, 86, 166, 251, 42, 182, 51, 214, 99, 133, 102, 145, 215, 145, 248, 66, 113, 35, 86, 20, 0, 206, 112, 227, 56, 37, 30, 241, 109, 171, 136, 216, 145, 43, 70, 16, 183, 195, 88, 114, 87, 168, 127, 160, 89, 187, 50, 244, 231, 2, 212, 180, 47, 221, 120, 176, 62, 141, 110, 108, 247, 145, 184, 5, 210, 30, 226, 140, 243, 136, 66, 102, 146, 239 },
                            Rol = "ADMIN",
                            SucursalId = 1
                        },
                        new
                        {
                            UsuarioId = 2,
                            Email = "carlos_molina@wendy.com",
                            Nickname = "carmolina",
                            Password = new byte[] { 213, 4, 3, 13, 5, 62, 10, 130, 4, 60, 30, 157, 33, 78, 43, 25, 153, 222, 134, 50, 115, 239, 136, 193, 222, 201, 212, 121, 25, 250, 195, 14, 107, 50, 152, 33, 147, 119, 210, 171, 141, 48, 125, 236, 135, 9, 16, 215, 215, 34, 221, 226, 190, 31, 251, 174, 165, 168, 234, 90, 117, 10, 101, 32 },
                            PasswordSalt = new byte[] { 250, 10, 48, 46, 124, 120, 139, 58, 9, 103, 200, 233, 227, 230, 172, 35, 90, 91, 78, 100, 88, 167, 82, 235, 142, 40, 62, 194, 204, 9, 236, 223, 43, 82, 76, 173, 176, 157, 47, 168, 224, 50, 34, 141, 18, 149, 202, 61, 113, 0, 107, 144, 215, 98, 234, 86, 166, 251, 42, 182, 51, 214, 99, 133, 102, 145, 215, 145, 248, 66, 113, 35, 86, 20, 0, 206, 112, 227, 56, 37, 30, 241, 109, 171, 136, 216, 145, 43, 70, 16, 183, 195, 88, 114, 87, 168, 127, 160, 89, 187, 50, 244, 231, 2, 212, 180, 47, 221, 120, 176, 62, 141, 110, 108, 247, 145, 184, 5, 210, 30, 226, 140, 243, 136, 66, 102, 146, 239 },
                            Rol = "SUPERVISOR",
                            SucursalId = 1
                        });
                });

            modelBuilder.Entity("WendyApp.Shared.Domain.HistorialPedido", b =>
                {
                    b.HasOne("WendyApp.Shared.Domain.EstadoPedido", "EstadoPedidos")
                        .WithMany("HistorialPedidos")
                        .HasForeignKey("EstadoPedidosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WendyApp.Shared.Domain.Pedido", "Pedido")
                        .WithMany("HistorialPedidos")
                        .HasForeignKey("PedidoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EstadoPedidos");

                    b.Navigation("Pedido");
                });

            modelBuilder.Entity("WendyApp.Shared.Domain.InsumoCategoria", b =>
                {
                    b.HasOne("WendyApp.Shared.Domain.Categoria", "Categoria")
                        .WithMany("Insumos")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WendyApp.Shared.Domain.Insumo", "Insumo")
                        .WithMany("Categorias")
                        .HasForeignKey("InsumoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("Insumo");
                });

            modelBuilder.Entity("WendyApp.Shared.Domain.PaisProveedor", b =>
                {
                    b.HasOne("WendyApp.Shared.Domain.Pais", "Pais")
                        .WithMany("Proveedores")
                        .HasForeignKey("PaisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WendyApp.Shared.Domain.Proveedor", "Proveedor")
                        .WithMany("Paises")
                        .HasForeignKey("ProveedorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pais");

                    b.Navigation("Proveedor");
                });

            modelBuilder.Entity("WendyApp.Shared.Domain.Pedido", b =>
                {
                    b.HasOne("WendyApp.Shared.Domain.EstadoPedido", "EstadoPedidos")
                        .WithMany("Pedidos")
                        .HasForeignKey("EstadoPedidosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WendyApp.Shared.Domain.Proveedor", "Proveedor")
                        .WithMany("Pedidos")
                        .HasForeignKey("ProveedorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WendyApp.Shared.Domain.Sucursal", "Sucursal")
                        .WithMany("Pedidos")
                        .HasForeignKey("SucursalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EstadoPedidos");

                    b.Navigation("Proveedor");

                    b.Navigation("Sucursal");
                });

            modelBuilder.Entity("WendyApp.Shared.Domain.PedidoInsumo", b =>
                {
                    b.HasOne("WendyApp.Shared.Domain.Insumo", "Insumo")
                        .WithMany("Pedidos")
                        .HasForeignKey("InsumoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WendyApp.Shared.Domain.Pedido", "Pedido")
                        .WithMany("Insumos")
                        .HasForeignKey("PedidoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Insumo");

                    b.Navigation("Pedido");
                });

            modelBuilder.Entity("WendyApp.Shared.Domain.ProveedorInsumo", b =>
                {
                    b.HasOne("WendyApp.Shared.Domain.Insumo", "Insumo")
                        .WithMany("Proveedores")
                        .HasForeignKey("InsumoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WendyApp.Shared.Domain.Proveedor", "Proveedor")
                        .WithMany("Insumos")
                        .HasForeignKey("ProveedorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Insumo");

                    b.Navigation("Proveedor");
                });

            modelBuilder.Entity("WendyApp.Shared.Domain.Sucursal", b =>
                {
                    b.HasOne("WendyApp.Shared.Domain.Pais", "Pais")
                        .WithMany("Sucursales")
                        .HasForeignKey("PaisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pais");
                });

            modelBuilder.Entity("WendyApp.Shared.Domain.Usuario", b =>
                {
                    b.HasOne("WendyApp.Shared.Domain.Sucursal", "Sucursal")
                        .WithMany("Usuarios")
                        .HasForeignKey("SucursalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sucursal");
                });

            modelBuilder.Entity("WendyApp.Shared.Domain.Categoria", b =>
                {
                    b.Navigation("Insumos");
                });

            modelBuilder.Entity("WendyApp.Shared.Domain.EstadoPedido", b =>
                {
                    b.Navigation("HistorialPedidos");

                    b.Navigation("Pedidos");
                });

            modelBuilder.Entity("WendyApp.Shared.Domain.Insumo", b =>
                {
                    b.Navigation("Categorias");

                    b.Navigation("Pedidos");

                    b.Navigation("Proveedores");
                });

            modelBuilder.Entity("WendyApp.Shared.Domain.Pais", b =>
                {
                    b.Navigation("Proveedores");

                    b.Navigation("Sucursales");
                });

            modelBuilder.Entity("WendyApp.Shared.Domain.Pedido", b =>
                {
                    b.Navigation("HistorialPedidos");

                    b.Navigation("Insumos");
                });

            modelBuilder.Entity("WendyApp.Shared.Domain.Proveedor", b =>
                {
                    b.Navigation("Insumos");

                    b.Navigation("Paises");

                    b.Navigation("Pedidos");
                });

            modelBuilder.Entity("WendyApp.Shared.Domain.Sucursal", b =>
                {
                    b.Navigation("Pedidos");

                    b.Navigation("Usuarios");
                });
#pragma warning restore 612, 618
        }
    }
}
