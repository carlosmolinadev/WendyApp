// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;
using Wendy.Server.Data;

namespace WendyApp.Server.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.15")
                .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WendyApp.Shared.Domain.Categoria", b =>
                {
                    b.Property<int>("CategoriaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("CategoriaId");

                    b.ToTable("Categorias");

                    b.HasData(
                        new
                        {
                            CategoriaId = 1,
                            Nombre = "Vegetales"
                        },
                        new
                        {
                            CategoriaId = 2,
                            Nombre = "Carnes"
                        });
                });

            modelBuilder.Entity("WendyApp.Shared.Domain.EstadoPedido", b =>
                {
                    b.Property<int>("EstadoPedidoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Estado")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("EstadoPedidoId");

                    b.ToTable("EstadoPedidos");
                });

            modelBuilder.Entity("WendyApp.Shared.Domain.HistorialPedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int>("EstadoPedidosId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<int>("PedidoId")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("Id");

                    b.HasIndex("EstadoPedidosId");

                    b.HasIndex("PedidoId");

                    b.ToTable("HistorialPedidos");
                });

            modelBuilder.Entity("WendyApp.Shared.Domain.Insumo", b =>
                {
                    b.Property<int>("InsumoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("Nombre")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("InsumoId");

                    b.ToTable("Insumos");

                    b.HasData(
                        new
                        {
                            InsumoId = 1,
                            Descripcion = "Precio por libra",
                            FechaCreacion = new DateTime(2022, 5, 13, 21, 38, 27, 643, DateTimeKind.Local).AddTicks(1760),
                            Nombre = "Tomate"
                        });
                });

            modelBuilder.Entity("WendyApp.Shared.Domain.InsumoCategoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoriaId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("InsumoId")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("InsumoId");

                    b.ToTable("InsumosCategorias");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoriaId = 1,
                            InsumoId = 1
                        });
                });

            modelBuilder.Entity("WendyApp.Shared.Domain.Pais", b =>
                {
                    b.Property<int>("PaisId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("PaisId");

                    b.ToTable("Paises");

                    b.HasData(
                        new
                        {
                            PaisId = 1,
                            Nombre = "El Salvador"
                        },
                        new
                        {
                            PaisId = 2,
                            Nombre = "Guatemala"
                        },
                        new
                        {
                            PaisId = 3,
                            Nombre = "Costa Rica"
                        });
                });

            modelBuilder.Entity("WendyApp.Shared.Domain.PaisProveedor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("CostoTransporte")
                        .HasColumnType("DECIMAL(18, 2)");

                    b.Property<int>("PaisId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("ProveedorId")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("Id");

                    b.HasIndex("PaisId");

                    b.HasIndex("ProveedorId");

                    b.ToTable("PaisesProveedores");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CostoTransporte = 2.0m,
                            PaisId = 1,
                            ProveedorId = 1
                        });
                });

            modelBuilder.Entity("WendyApp.Shared.Domain.Pedido", b =>
                {
                    b.Property<int>("PedidoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EstadoPedidosId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<DateTime>("FechaEntrega")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<int>("ProveedorId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("SucursalId")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("PedidoId");

                    b.HasIndex("EstadoPedidosId");

                    b.HasIndex("ProveedorId");

                    b.HasIndex("SucursalId");

                    b.ToTable("Pedidos");
                });

            modelBuilder.Entity("WendyApp.Shared.Domain.PedidoInsumo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Cantidad")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("InsumoId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("PedidoId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<decimal>("Precio")
                        .HasColumnType("DECIMAL(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("InsumoId");

                    b.HasIndex("PedidoId");

                    b.ToTable("PedidosInsumos");
                });

            modelBuilder.Entity("WendyApp.Shared.Domain.Proveedor", b =>
                {
                    b.Property<int>("ProveedorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("Nombre")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("ProveedorId");

                    b.ToTable("Proveedores");

                    b.HasData(
                        new
                        {
                            ProveedorId = 1,
                            Descripcion = "Distribuidor de carnes y pan",
                            FechaCreacion = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Super selectos"
                        });
                });

            modelBuilder.Entity("WendyApp.Shared.Domain.ProveedorInsumo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("InsumoId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<decimal>("Precio")
                        .HasColumnType("DECIMAL(18, 2)");

                    b.Property<int>("ProveedorId")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("Id");

                    b.HasIndex("InsumoId");

                    b.HasIndex("ProveedorId");

                    b.ToTable("ProveedoresInsumos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            InsumoId = 1,
                            Precio = 0.3m,
                            ProveedorId = 1
                        });
                });

            modelBuilder.Entity("WendyApp.Shared.Domain.Sucursal", b =>
                {
                    b.Property<int>("SucursalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Direccion")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("Nombre")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int>("PaisId")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("SucursalId");

                    b.HasIndex("PaisId");

                    b.ToTable("Sucursales");

                    b.HasData(
                        new
                        {
                            SucursalId = 1,
                            Direccion = "Metrocentro 8va etapa",
                            FechaCreacion = new DateTime(2022, 5, 13, 21, 38, 27, 638, DateTimeKind.Local).AddTicks(2049),
                            Nombre = "Sucursal Metrocentro",
                            PaisId = 1
                        });
                });

            modelBuilder.Entity("WendyApp.Shared.Domain.Usuario", b =>
                {
                    b.Property<int>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Nickname")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<byte[]>("Password")
                        .HasColumnType("RAW(2000)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("RAW(2000)");

                    b.Property<string>("Rol")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int>("SucursalId")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("UsuarioId");

                    b.HasIndex("SucursalId");

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            UsuarioId = 1,
                            Email = "usuario_admin@wendy.com",
                            Nickname = "admin",
                            Password = new byte[] { 138, 2, 229, 189, 81, 61, 141, 153, 139, 133, 138, 130, 113, 211, 124, 185, 28, 17, 45, 17, 109, 165, 214, 176, 80, 246, 116, 185, 138, 50, 253, 215, 182, 28, 94, 98, 14, 31, 157, 242, 231, 37, 34, 130, 236, 196, 112, 4, 81, 184, 216, 43, 79, 169, 253, 120, 1, 103, 133, 170, 88, 251, 13, 174 },
                            PasswordSalt = new byte[] { 166, 35, 127, 98, 213, 174, 134, 102, 195, 65, 190, 130, 131, 92, 38, 246, 207, 227, 238, 207, 137, 8, 175, 15, 212, 86, 71, 91, 110, 146, 71, 186, 126, 111, 60, 58, 10, 174, 79, 199, 72, 68, 40, 191, 183, 0, 37, 27, 184, 149, 111, 200, 123, 156, 158, 22, 219, 224, 192, 213, 23, 167, 68, 7, 100, 102, 11, 200, 144, 46, 250, 47, 64, 242, 186, 166, 90, 198, 13, 162, 205, 49, 202, 38, 254, 194, 9, 190, 211, 153, 250, 248, 21, 96, 168, 90, 168, 172, 83, 163, 35, 52, 251, 175, 194, 45, 232, 224, 11, 78, 14, 57, 69, 54, 227, 9, 12, 42, 138, 63, 117, 7, 182, 35, 26, 209, 151, 16 },
                            Rol = "ADMIN",
                            SucursalId = 1
                        },
                        new
                        {
                            UsuarioId = 2,
                            Email = "carlos_molina@wendy.com",
                            Nickname = "carmolina",
                            Password = new byte[] { 138, 2, 229, 189, 81, 61, 141, 153, 139, 133, 138, 130, 113, 211, 124, 185, 28, 17, 45, 17, 109, 165, 214, 176, 80, 246, 116, 185, 138, 50, 253, 215, 182, 28, 94, 98, 14, 31, 157, 242, 231, 37, 34, 130, 236, 196, 112, 4, 81, 184, 216, 43, 79, 169, 253, 120, 1, 103, 133, 170, 88, 251, 13, 174 },
                            PasswordSalt = new byte[] { 166, 35, 127, 98, 213, 174, 134, 102, 195, 65, 190, 130, 131, 92, 38, 246, 207, 227, 238, 207, 137, 8, 175, 15, 212, 86, 71, 91, 110, 146, 71, 186, 126, 111, 60, 58, 10, 174, 79, 199, 72, 68, 40, 191, 183, 0, 37, 27, 184, 149, 111, 200, 123, 156, 158, 22, 219, 224, 192, 213, 23, 167, 68, 7, 100, 102, 11, 200, 144, 46, 250, 47, 64, 242, 186, 166, 90, 198, 13, 162, 205, 49, 202, 38, 254, 194, 9, 190, 211, 153, 250, 248, 21, 96, 168, 90, 168, 172, 83, 163, 35, 52, 251, 175, 194, 45, 232, 224, 11, 78, 14, 57, 69, 54, 227, 9, 12, 42, 138, 63, 117, 7, 182, 35, 26, 209, 151, 16 },
                            Rol = "SUPERVISOR",
                            SucursalId = 1
                        });
                });

            modelBuilder.Entity("WendyApp.Shared.Domain.HistorialPedido", b =>
                {
                    b.HasOne("WendyApp.Shared.Domain.EstadoPedido", "EstadoPedidos")
                        .WithMany("HistorialPedidos")
                        .HasForeignKey("EstadoPedidosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WendyApp.Shared.Domain.Pedido", "Pedido")
                        .WithMany("HistorialPedidos")
                        .HasForeignKey("PedidoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EstadoPedidos");

                    b.Navigation("Pedido");
                });

            modelBuilder.Entity("WendyApp.Shared.Domain.InsumoCategoria", b =>
                {
                    b.HasOne("WendyApp.Shared.Domain.Categoria", "Categoria")
                        .WithMany("Insumos")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WendyApp.Shared.Domain.Insumo", "Insumo")
                        .WithMany("Categorias")
                        .HasForeignKey("InsumoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("Insumo");
                });

            modelBuilder.Entity("WendyApp.Shared.Domain.PaisProveedor", b =>
                {
                    b.HasOne("WendyApp.Shared.Domain.Pais", "Pais")
                        .WithMany("Proveedores")
                        .HasForeignKey("PaisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WendyApp.Shared.Domain.Proveedor", "Proveedor")
                        .WithMany("Paises")
                        .HasForeignKey("ProveedorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pais");

                    b.Navigation("Proveedor");
                });

            modelBuilder.Entity("WendyApp.Shared.Domain.Pedido", b =>
                {
                    b.HasOne("WendyApp.Shared.Domain.EstadoPedido", "EstadoPedidos")
                        .WithMany("Pedidos")
                        .HasForeignKey("EstadoPedidosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WendyApp.Shared.Domain.Proveedor", "Proveedor")
                        .WithMany("Pedidos")
                        .HasForeignKey("ProveedorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WendyApp.Shared.Domain.Sucursal", "Sucursal")
                        .WithMany("Pedidos")
                        .HasForeignKey("SucursalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EstadoPedidos");

                    b.Navigation("Proveedor");

                    b.Navigation("Sucursal");
                });

            modelBuilder.Entity("WendyApp.Shared.Domain.PedidoInsumo", b =>
                {
                    b.HasOne("WendyApp.Shared.Domain.Insumo", "Insumo")
                        .WithMany("Pedidos")
                        .HasForeignKey("InsumoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WendyApp.Shared.Domain.Pedido", "Pedido")
                        .WithMany("Insumos")
                        .HasForeignKey("PedidoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Insumo");

                    b.Navigation("Pedido");
                });

            modelBuilder.Entity("WendyApp.Shared.Domain.ProveedorInsumo", b =>
                {
                    b.HasOne("WendyApp.Shared.Domain.Insumo", "Insumo")
                        .WithMany("Proveedores")
                        .HasForeignKey("InsumoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WendyApp.Shared.Domain.Proveedor", "Proveedor")
                        .WithMany("Insumos")
                        .HasForeignKey("ProveedorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Insumo");

                    b.Navigation("Proveedor");
                });

            modelBuilder.Entity("WendyApp.Shared.Domain.Sucursal", b =>
                {
                    b.HasOne("WendyApp.Shared.Domain.Pais", "Pais")
                        .WithMany("Sucursales")
                        .HasForeignKey("PaisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pais");
                });

            modelBuilder.Entity("WendyApp.Shared.Domain.Usuario", b =>
                {
                    b.HasOne("WendyApp.Shared.Domain.Sucursal", "Sucursal")
                        .WithMany("Usuarios")
                        .HasForeignKey("SucursalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sucursal");
                });

            modelBuilder.Entity("WendyApp.Shared.Domain.Categoria", b =>
                {
                    b.Navigation("Insumos");
                });

            modelBuilder.Entity("WendyApp.Shared.Domain.EstadoPedido", b =>
                {
                    b.Navigation("HistorialPedidos");

                    b.Navigation("Pedidos");
                });

            modelBuilder.Entity("WendyApp.Shared.Domain.Insumo", b =>
                {
                    b.Navigation("Categorias");

                    b.Navigation("Pedidos");

                    b.Navigation("Proveedores");
                });

            modelBuilder.Entity("WendyApp.Shared.Domain.Pais", b =>
                {
                    b.Navigation("Proveedores");

                    b.Navigation("Sucursales");
                });

            modelBuilder.Entity("WendyApp.Shared.Domain.Pedido", b =>
                {
                    b.Navigation("HistorialPedidos");

                    b.Navigation("Insumos");
                });

            modelBuilder.Entity("WendyApp.Shared.Domain.Proveedor", b =>
                {
                    b.Navigation("Insumos");

                    b.Navigation("Paises");

                    b.Navigation("Pedidos");
                });

            modelBuilder.Entity("WendyApp.Shared.Domain.Sucursal", b =>
                {
                    b.Navigation("Pedidos");

                    b.Navigation("Usuarios");
                });
#pragma warning restore 612, 618
        }
    }
}
